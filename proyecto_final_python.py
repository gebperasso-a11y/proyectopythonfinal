# -*- coding: utf-8 -*-
"""Proyecto Final Python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15LnttlbIPh673ryiQLX2cJlda_ZjvSum

# **UNIVERSIDAD DE LAS FUERZAS ARMADAS ESPE**

#CURSO DE PYTHON
# Proyecto de Evaluación Docente

Integrantes:
* Bonilla
* Vivanco
* Galárraga
* Rosero Paul
* Chamorro Diana
* Oña Omar

#*Preparación* y Fundamentos

**Planteamiento del problema**

La Universidad de las Fuerzas Armadas ESPE realiza un proceso de evaluación docente con el fin de garantizar la calidad de la enseñanza. Este proceso considera cuatro parámetros fundamentales:

1. Autoevaluación: la valoración que el docente realiza sobre su propio desempeño.

2. Heteroevaluación: la calificación que asignan los estudiantes al docente.

3. Evaluación de pares: la opinión académica de los colegas.

4. Evaluación de directivos: la valoración otorgada por las autoridades de la institución.

Cada uno de estos parámetros se califica en una escala de 0 a 5.

El interés principal es analizar si existen diferencias significativas entre estos tipos de evaluación y cómo se relacionan entre sí. Esto permitirá identificar tendencias como:

+ ¿Los docentes tienden a calificarse más alto que los estudiantes?

+ ¿Coinciden las evaluaciones de pares y directivos con la percepción de los estudiantes?

+ ¿Cuál es el impacto de cada tipo de evaluación en el promedio final del docente?

+ Identificar desbalances en la percepción docente-estudiante.

+ Verificar coherencia entre pares y autoridades.

+ Evaluar la incidencia de cada parámetro en la nota global.

**Preguntas de investigación a responder con Python**

¿Cuál es el promedio de cada tipo de evaluación en los docentes?

¿Existen diferencias notorias entre autoevaluación y heteroevaluación?

¿Qué tan correlacionadas están las evaluaciones de pares y directivos con las demás?

¿Cómo cambia el promedio final de un docente si se modifican los pesos de cada evaluación?

¿Existen diferencias significativas en las calificaciones promedio de los docentes entre las distintas facultades o departamentos de la institución?

**Estructura inicial del programa**

1. Configuración del entorno

* Se utilizará un cuaderno Jupyter/Google Colab.

* Se instalarán y cargarán las librerías: pandas, numpy, sympy, matplotlib.

2. Implementación de scripts básicos

* Variables y operadores: definir las calificaciones de ejemplo en escala de 0 a 5 y calcular promedios.

* Condicionales: establecer categorías de desempeño (ej. excelente, bueno, aceptable).

* Bucles: recorrer listas de calificaciones y calcular resultados por docente.

* Funciones: crear una función que calcule el promedio de un docente a partir de sus cuatro evaluaciones.
"""

# Ejemplo básico de código inicial:
#Variables en escala de 0 a 5
autoeval = 4.5
heteroeval = 4.2
pares = 4.3
directivos = 4.7

# Operadores: promedio simple
promedio = (autoeval + heteroeval + pares + directivos) / 4
print("Promedio inicial:", promedio)

# Condicionales: clasificación de desempeño
if promedio >= 4.5:
    print("Excelente desempeño docente")
elif promedio >= 4.0:
    print("Buen desempeño docente")
elif promedio >= 3.0:
    print("Desempeño aceptable")
else:
    print("Desempeño a mejorar")

# Función: cálculo de promedio general
def promedio_docente(valores):
    return sum(valores) / len(valores)

# Uso de la función
print("Promedio función:", promedio_docente([autoeval, heteroeval, pares, directivos]))

# Bucle: mostrar calificación de cada evaluación
for evaluacion in [("Autoevaluación", autoeval),
                   ("Heteroevaluación", heteroeval),
                   ("Pares", pares),
                   ("Directivos", directivos)]:
    print(evaluacion[0], ":", evaluacion[1])

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Configuración de gráficos
plt.style.use("ggplot")

# URL con formato CSV
url = "https://docs.google.com/spreadsheets/d/18yMuI47bOAoVu-AcJ-nNjIj1iqsnKZGr/export?format=csv&gid=1030073867"

# Cargar datos
df = pd.read_csv(url)

# Mostrar primeras filas
print("Vista previa de los datos:")
display(df.head())

import matplotlib.pyplot as plt
import seaborn as sns

# Select the evaluation columns
eval_columns = ['Autoevaluación', 'Co-evaluación', 'Hetero-evaluación', 'Evaluación directivos']

# Create boxplots for each evaluation column
plt.figure(figsize=(10, 6))
sns.boxplot(data=df[eval_columns])
plt.title('Boxplots de Columnas de Evaluación')
plt.ylabel('Puntuación')
plt.show()

# Create violin plots for each evaluation column
plt.figure(figsize=(10, 6))
sns.violinplot(data=df[eval_columns])
plt.title('Violin Plots de Columnas de Evaluación')
plt.ylabel('Puntuación')
plt.show()

# Create scatter plots for each pair of evaluation columns
sns.pairplot(df[eval_columns])
plt.suptitle('Scatter Plots de Columnas de Evaluación', y=1.02)
plt.show()

"""Calificaciones individuales"""

# Definir pesos
w_auto = 0.10
w_co = 0.30
w_hetero = 0.35
w_dir = 0.25

# Convertir columnas a numérico, reemplazando comas por puntos
df["Autoevaluación"] = df["Autoevaluación"].astype(float)
df["Co-evaluación"] = df["Co-evaluación"].astype(float)
df["Hetero-evaluación"] = df["Hetero-evaluación"].astype(float)
df["Evaluación directivos"] = df["Evaluación directivos"].astype(float)


# Calcular la calificación final
df["Calificación_Final"] = (
    df["Autoevaluación"] * w_auto +
    df["Co-evaluación"] * w_co +
    df["Hetero-evaluación"] * w_hetero +
    df["Evaluación directivos"] * w_dir
)
print("Vista previa de los datos:")
display(df.head())

"""Boxplot por departamento"""

import seaborn as sns
plt.figure(figsize=(8, 6))
sns.boxplot(x="Departamento", y="Calificación_Final", data=df, palette="Set2")

plt.title("Distribución de Calificación Final por Departamento", fontsize=14)
plt.xlabel("Departamento")
plt.ylabel("Calificación Final")
plt.xticks(rotation=20)
plt.tight_layout()
plt.show()

"""Violin plot por sede"""

plt.figure(figsize=(8, 6))
sns.violinplot(x="Sede", y="Calificación_Final", data=df, palette="pastel", inner="box")

plt.title("Distribución de Calificación Final por Sede", fontsize=14)
plt.xlabel("Sede")
plt.ylabel("Calificación Final")
plt.tight_layout()
plt.show()

"""Etiquetar a los docentes según su desempeño"""

def clasificar_docente(nota):
    if nota >= 4.5:
        return "Excelente"
    elif nota >= 4.0:
        return "Bueno"
    elif nota >= 3.5:
        return "Regular"
    else:
        return "Bajo"

df["Desempeño"] = df["Calificación_Final"].apply(clasificar_docente)
display(df.head())

"""Búsqueda de docentes con más de 100 alumnos"""

print("\nDocentes con más de 100 alumnos a cargo:")
for i, row in df.iterrows():
    if row["Número de alumnos a cargo"] > 100:
        print(f"- {row['Nombre']} ({row['Número de alumnos a cargo']} alumnos)")

"""Función que calcule promedio de calificación por departamento"""

def promedio_departamento(depto):
    subset = df[df["Departamento"] == depto]
    return subset["Calificación_Final"].mean()

print("\nPromedio de calificación por departamento:")
for depto in df["Departamento"].unique():
    print(f"{depto}: {promedio_departamento(depto):.2f}")

"""# Conclusiones

El sistema de evaluación docente de la Universidad de las Fuerzas Armadas ESPE se sustenta en un enfoque integral que combina distintas perspectivas como la autoevaluación, heteroevaluación, pares y directivos. Esta diversidad de fuentes permite obtener resultados más objetivos, reduciendo el sesgo que podría generarse si se considerara únicamente una dimensión.

La autoevaluación evidencia el nivel de autocrítica y conciencia profesional del docente respecto a sus propias prácticas. La heteroevaluación, realizada por los estudiantes, refleja la percepción directa del impacto pedagógico en el aula. La evaluación de pares resalta la calidad metodológica y académica desde la experiencia compartida, mientras que la de directivos ofrece una visión estratégica del desempeño y alineación institucional.

Aunque la calificación se establece sobre 5, los resultados pueden estar influenciados por factores externos como la subjetividad de los estudiantes o las condiciones institucionales. Esto evidencia la necesidad de acompañar la evaluación con procesos de retroalimentación continua, planes de capacitación docente y mecanismos de seguimiento.

Los resultados de la evaluación no deben interpretarse únicamente como un indicador numérico, sino como una herramienta de mejora continua. Al analizar conjuntamente los cuatro parámetros, se obtiene una radiografía más completa del quehacer docente, lo que contribuye al fortalecimiento de la calidad académica de la institución.

La implementación de análisis automatizados en Python como se realizó en este trabaj abre la posibilidad de procesar grandes volúmenes de datos, generar reportes dinámicos y detectar patrones de desempeño. Esto favorece la toma de decisiones basadas en evidencias y consolida la transparencia en los procesos de evaluación docente
"""